/* Copyright Airship and Contributors */

#import <Foundation/Foundation.h>
#import "UAAPIClient.h"

@class UAChannelRegistrationPayload;
@class UARuntimeConfig;

NS_ASSUME_NONNULL_BEGIN

/**
 * Represents possible channel API client errors.
 */
typedef NS_ENUM(NSInteger, UAChannelAPIClientError) {
    /**
     * Indicates an unsuccessful client status.
     */
    UAChannelAPIClientErrorUnsuccessfulStatus,

    /**
     * Indicates there was a channel conflict on the server.
     */
    UAChannelAPIClientErrorConflict
};

/**
 * The domain for NSErrors generated by the channel API client.
 */
extern NSString * const UAChannelAPIClientErrorDomain;

/**
 * A block called when the channel ID creation request completes.
 *
 * @param channelID The channel identifier string.
 * @param existing Boolean to indicate if the channel previously existed or not.
 * @param error The error.
 */
typedef void (^UAChannelAPIClientCreateCompletionHandler)(NSString * _Nullable channelID, BOOL existing, NSError * _Nullable error);

/**
 * A block called when the channel update request completes.
 *
 * @param error The error.
 */
typedef void (^UAChannelAPIClientUpdateCompletionHandler)(NSError * _Nullable error);

/**
 * A high level abstraction for performing Channel API creation and updates.
 */
@interface UAChannelAPIClient : UAAPIClient

///---------------------------------------------------------------------------------------
/// @name Channel API Client Internal Methods
///---------------------------------------------------------------------------------------

/**
 * Factory method to create a UAChannelAPIClient.
 * @param config The Airship config.
 * @return UAChannelAPIClient instance.
 */
+ (instancetype)clientWithConfig:(UARuntimeConfig *)config;

/**
 * Factory method to create a UAChannelAPIClient.
 * @param config The Airship config.
 * @param session The UARequestSession instance.
 * @return UAChannelAPIClient instance.
 */
+ (instancetype)clientWithConfig:(UARuntimeConfig *)config session:(UARequestSession *)session;

/**
 * Create the channel ID.
 *
 * @param payload An instance of UAChannelRegistrationPayload.
 * @param completionHandler A UAChannelAPIClientCreateCompletionHandler.
 *
 */
- (void)createChannelWithPayload:(UAChannelRegistrationPayload *)payload
               completionHandler:(UAChannelAPIClientCreateCompletionHandler)completionHandler;

/**
 * Update the channel.
 *
 * @param channelID The channel identifier.
 * @param payload An instance of UAChannelRegistrationPayload.
 * @param completionHandler A UAChannelAPIClientUpdateCompletionHandler.
 *
 */
- (void)updateChannelWithID:(NSString *)channelID
                withPayload:(UAChannelRegistrationPayload *)payload
          completionHandler:(UAChannelAPIClientUpdateCompletionHandler)completionHandler;

@end

NS_ASSUME_NONNULL_END
